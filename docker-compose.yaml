---
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: ${ZK_HOST}
    hostname: ${ZK_HOST}
    ports:
      - "${ZK_PORT}:${ZK_PORT}"
    networks:
      - test      
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: ${ZK_PORT}

  broker:
    image: confluentinc/cp-kafka:latest
    container_name: ${BROKER_HOST}
    hostname: ${BROKER_HOST}
    ports:
      - "${BROKER_PORT}:${BROKER_PORT}"
    depends_on:
      - ${ZK_HOST}
    networks:
      - test      
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: '${ZK_HOST}:${ZK_PORT}'
      KAFKA_ADVERTISED_LISTENERS: 'SSL://${BROKER_HOST}:${BROKER_PORT}'
      KAFKA_SSL_KEYSTORE_FILENAME: broker.keystore.jks
      KAFKA_SSL_KEYSTORE_CREDENTIALS: cert_creds
      KAFKA_SSL_KEY_CREDENTIALS: cert_creds
      KAFKA_SSL_TRUSTSTORE_FILENAME: broker.truststore.jks
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: cert_creds
      KAFKA_SSL_CLIENT_AUTH: 'required'
      KAFKA_SECURITY_PROTOCOL: SSL
      KAFKA_SECURITY_INTER_BROKER_PROTOCOL: SSL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - ./secrets:/etc/kafka/secrets

  kafka-es-func:
    build:
      context: .
    links:
      - ${BROKER_HOST}
    depends_on:
      - ${ZK_HOST}
      - ${BROKER_HOST}
    networks:
      - test      
    environment:
      CONNECT_TOPIC: 'storm-events'
      CONNECT_BOOTSTRAP_SERVERS: '${BROKER_HOST}:${BROKER_PORT}'
      CONNECT_GROUP_ID: adx
      # CONNECT_KAFKASTORE_SECURITY_PROTOCOL: SSL
      CONNECT_SECURITY_PROTOCOL: SSL
      CONNECT_SSL_KEYSTORE_LOCATION: /opt/cert/RSAkey.pem
      CONNECT_SSL_CA_LOCATION: /opt/cert/CARoot.pem
      CONNECT_SSL_KEYSTORE_PASSWORD: ${SSL_SECRET}
      CONNECT_SSL_KEY_PASSWORD: ${SSL_SECRET}
      CONNECT_SSL_TRUSTSTORE_LOCATION: /opt/cert/certificate.pem
      CONNECT_SSL_TRUSTSTORE_PASSWORD: ${SSL_SECRET}
    volumes:
      - ./secrets:/etc/kafka/secrets

  events-producer:
    build:
      context: ./storm-events-producer
    links:
      - ${BROKER_HOST}
    depends_on:
      - ${ZK_HOST}
      - ${BROKER_HOST}
    restart: always
    networks:
      - test         
    environment:
      KAFKA_BOOTSTRAP_SERVER: '${BROKER_HOST}:${BROKER_PORT}'
      KAFKA_TOPIC: 'storm-events'
      SOURCE_FILE: 'StormEvents.csv'

networks:
  test:
    driver: bridge