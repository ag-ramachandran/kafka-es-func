---
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: ${ZK_HOST}
    hostname: ${ZK_HOST}
    ports:
      - "${ZK_PORT}:${ZK_PORT}"
    networks:
      - test      
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: ${ZK_PORT}

  broker:
    image: confluentinc/cp-kafka:latest
    container_name: ${BROKER_HOST}
    hostname: ${BROKER_HOST}
    ports:
      - "${BROKER_PORT}:${BROKER_PORT}"
    depends_on:
      - ${ZK_HOST}
    networks:
      - test      
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: '${ZK_HOST}:${ZK_PORT}'
      KAFKA_ADVERTISED_LISTENERS: 'SSL://${BROKER_HOST}:${BROKER_PORT}'
      KAFKA_SSL_KEYSTORE_FILENAME: broker.keystore.jks
      KAFKA_SSL_KEYSTORE_CREDENTIALS: cert_creds
      KAFKA_SSL_KEY_CREDENTIALS: cert_creds
      KAFKA_SSL_TRUSTSTORE_FILENAME: broker.truststore.jks
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: cert_creds
      KAFKA_SSL_CLIENT_AUTH: 'required'
      KAFKA_SECURITY_PROTOCOL: SSL
      KAFKA_SECURITY_INTER_BROKER_PROTOCOL: SSL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - ./secrets:/etc/kafka/secrets

  kafka-es-func:
    build:
      context: ./kafka-es-function
    links:
      - ${BROKER_HOST}
    depends_on:
      - ${ZK_HOST}
      - ${BROKER_HOST}
    networks:
      - test      
    environment:
      CONNECT_TOPIC: 'wallet-payments' # storm-events
      CONNECT_BOOTSTRAP_SERVERS: '${BROKER_HOST}:${BROKER_PORT}'
      CONNECT_GROUP_ID: adx
      # CONNECT_KAFKASTORE_SECURITY_PROTOCOL: SSL
      CONNECT_SECURITY_PROTOCOL: SSL
      CONNECT_SSL_KEYSTORE_LOCATION: /opt/cert/RSAkey.pem
      CONNECT_SSL_CA_LOCATION: /opt/cert/CARoot.pem
      CONNECT_SSL_KEYSTORE_PASSWORD: ${SSL_SECRET}
      CONNECT_SSL_KEY_PASSWORD: ${SSL_SECRET}
      CONNECT_SSL_TRUSTSTORE_LOCATION: /opt/cert/certificate.pem
      CONNECT_SSL_TRUSTSTORE_PASSWORD: ${SSL_SECRET}
      CONNECT_SCHEMA_REGISTRY_URL: 'http://${SR_HOST}:${SR_PORT}'
    volumes:
      - ./secrets:/etc/kafka/secrets

  # events-producer:
  #   build:
  #     context: ./storm-events-producer
  #   links:
  #     - ${BROKER_HOST}
  #   depends_on:
  #     - ${ZK_HOST}
  #     - ${BROKER_HOST}
  #   restart: always
  #   networks:
  #     - test         
  #   environment:
  #     KAFKA_BOOTSTRAP_SERVER: '${BROKER_HOST}:${BROKER_PORT}'
  #     KAFKA_TOPIC: 'storm-events'
  #     SOURCE_FILE: 'StormEvents.csv'


  schema-registry:
    image: confluentinc/cp-schema-registry
    container_name: ${SR_HOST}
    hostname: ${SR_HOST}
    depends_on:
      - ${ZK_HOST}
      - ${BROKER_HOST}
    ports:
      - "${SR_PORT}:${SR_PORT}"
    networks:
      - test      
    environment:
      SCHEMA_REGISTRY_HOST_NAME: ${SR_HOST}
      SCHEMA_REGISTRY_LISTENERS: 'http://0.0.0.0:${SR_PORT}'
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: '${ZK_HOST}:${ZK_PORT}'
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'SSL://${BROKER_HOST}:${BROKER_PORT}'
      SCHEMA_REGISTRY_KAFKASTORE_SECURITY_PROTOCOL: SSL
      SCHEMA_REGISTRY_KAFKASTORE_SSL_KEYSTORE_LOCATION: /etc/schema-registry/secrets/schema-registry.keystore.jks
      SCHEMA_REGISTRY_SSL_KEYSTORE_LOCATION: /etc/schema-registry/secrets/schema-registry.keystore.jks
      SCHEMA_REGISTRY_KAFKASTORE_SSL_KEYSTORE_PASSWORD: ${SSL_SECRET}
      SCHEMA_REGISTRY_SSL_KEYSTORE_PASSWORD: ${SSL_SECRET}
      SCHEMA_REGISTRY_KAFKASTORE_SSL_KEY_PASSWORD: ${SSL_SECRET}
      SCHEMA_REGISTRY_SSL_KEY_PASSWORD: ${SSL_SECRET}
      SCHEMA_REGISTRY_KAFKASTORE_SSL_TRUSTSTORE_LOCATION: /etc/schema-registry/secrets/schema-registry.truststore.jks
      SCHEMA_REGISTRY_SSL_TRUSTSTORE_LOCATION: /etc/schema-registry/secrets/schema-registry.truststore.jks
      SCHEMA_REGISTRY_KAFKASTORE_SSL_TRUSTSTORE_PASSWORD: ${SSL_SECRET}
      SCHEMA_REGISTRY_SSL_TRUSTSTORE_PASSWORD: ${SSL_SECRET}
      # SCHEMA_REGISTRY_SCHEMA_REGISTRY_INTER_INSTANCE_PROTOCOL: https
      SCHEMA_REGISTRY_KAFKASTORE_TOPIC: _schemas
      # SCHEMA_REGISTRY_SSL_CLIENT_AUTH: 'true'
    volumes:
      - ./secrets:/etc/schema-registry/secrets



  avro_producer:
    build:
      context: ./to-kafka
    links:
      - ${BROKER_HOST}
    depends_on:
      - ${ZK_HOST}
      - ${BROKER_HOST}
      - ${SR_HOST}
    networks:
      - test      
    environment:
      CONNECT_TOPIC: 'wallet-payments'
      PRODUCER_BOOTSTRAP_SERVERS: '${BROKER_HOST}:${BROKER_PORT}'
      PRODUCER_SSL_TRUSTSTORE_LOCATION: /opt/cert/producer.truststore.jks
      PRODUCER_SSL_TRUSTSTORE_PASSWORD: ${SSL_SECRET}
      PRODUCER_SSL_KEYSTORE_LOCATION: /opt/cert/producer.keystore.jks
      PRODUCER_SSL_KEYSTORE_PASSWORD: ${SSL_SECRET}
      PRODUCER_KEY_PASSWORD: ${SSL_SECRET}
      CONNECT_SR_URL: 'http://${SR_HOST}:${SR_PORT}'
    volumes:
      - ./secrets:/etc/kafka/secrets


networks:
  test:
    driver: bridge